import os
import google.generativeai as genai
import logging

api_key = os.environ.get("GEMINI_API_KEY")
if api_key:
    genai.configure(api_key=api_key)
    _model = genai.GenerativeModel("gemini-1.5-flash")
    _generation_config = genai.types.GenerationConfig(temperature=0.2)
else:
    logging.warning(
        "GEMINI_API_KEY is not set, Gemini features will be disabled."
    )
    _model = None
    _generation_config = None


def generate_analyst_report(
    ticker_name: str,
    ticker_code: str,
    latest_data_dict: list[dict],
    predictions_dict: list[dict],
) -> str:
    """Return an investment report generated by Gemini."""
    if not api_key or os.environ.get("PYTEST_CURRENT_TEST") or _model is None:
        return "Gemini API key is not configured."

    # シンプル化：生データだけをプロンプトに渡して分析を依頼
    prompt = f"""
次の株価データと予測データをもとに、日本語で簡潔な投資判断レポートをMarkdown形式で作成してください。

【最新データ】
{latest_data_dict}

【モデル予測】
{predictions_dict}
"""
    try:
        resp = _model.generate_content(prompt, generation_config=_generation_config)
        return resp.text
    except Exception as e:
        logging.error(f"Gemini call failed: {e}", exc_info=True)
        return ""
